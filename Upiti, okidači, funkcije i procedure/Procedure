-- PROCEDURE:	
    
 -- DK 
 
 /*
Za dva vremenska intervala (pojedini će biti određen s dvije datumske vrijednosti) se mora odrediti  pojedinačni 
ukupni trošak za misije, ukupni trošak za popravak, ukupni trošak za liječenje te usporedit. 
Ispis treba biti u obliku:
	Vremensko razdoblje od 1.10.1991. do 11.07.1998. ima manji trošak kada je riječ o misijama u usporedbi s razdobljem od 23.04.1997. do 2.12.2001..
    Vremensko razdoblje od 23.04.1997. do 2.12.2001. ima manji trošak kada je riječ o popravcima u usporedbi s razdobljem od 1.10.1991. do 11.07.1998..
    Vremensko razdoblje od 1.10.1991. do  11.07.1998. ima manji trošak kada je riječ liječenju u usporedbi s razdobljem od 23.04.1997. do 2.12.2001..
*/

DROP PROCEDURE IF EXISTS usporedba;

DELIMITER //
CREATE PROCEDURE usporedba(IN prvi_datum_p DATETIME, IN prvi_datum_k DATETIME, IN drugi_datum_p DATETIME, IN drugi_datum_k DATETIME, OUT txt_mi VARCHAR(200), OUT txt_po VARCHAR(200), OUT txt_li VARCHAR(200))
BEGIN
	DECLARE prvo_misija NUMERIC(15, 2);
    DECLARE prvo_popravak NUMERIC(15, 2);
    DECLARE prvo_lijecenje NUMERIC(15, 2);
    
    DECLARE drugo_misija NUMERIC(15, 2);
    DECLARE drugo_popravak NUMERIC(15, 2);
    DECLARE drugo_lijecenje NUMERIC(15, 2);
    
    SELECT SUM(trosak_misije) INTO prvo_misija
    FROM misija
    WHERE vrijeme_pocetka >= prvi_datum_p AND vrijeme_kraja <= prvi_datum_k;
    
    SELECT SUM(trosak_misije) INTO drugo_misija
    FROM misija
    WHERE vrijeme_pocetka >= drugi_datum_p AND vrijeme_kraja <= drugi_datum_k;
    
    IF prvo_misija = drugo_misija THEN
		SET txt_mi = CONCAT("Vremensko razdoblje od ", prvi_datum_p," do ", prvi_datum_k, " ima isti trošak kada je riječ o misijama u usporedbi s razdobljem od ",  drugi_datum_p, " do ", drugi_datum_k);
	ELSEIF prvo_misija > drugo_misija THEN
		SET txt_mi = CONCAT("Vremensko razdoblje od ", prvi_datum_p," do ", prvi_datum_k, " ima veći trošak kada je riječ o misijama u usporedbi s razdobljem od ",  drugi_datum_p, " do ", drugi_datum_k);
	ELSE
		SET txt_mi = CONCAT("Vremensko razdoblje od ", prvi_datum_p," do ", prvi_datum_k, " ima manji trošak kada je riječ o misijama u usporedbi s razdobljem od ",  drugi_datum_p, " do ", drugi_datum_k);
	END IF;
    
    
	SELECT SUM(trosak_popravka) INTO prvo_popravak
    FROM popravak
    WHERE pocetak_popravka >= prvi_datum_p AND kraj_popravka <= prvi_datum_k;
    
    SELECT SUM(trosak_popravka) INTO drugo_popravak
    FROM popravak
    WHERE pocetak_popravka >= drugi_datum_p AND kraj_popravka <= drugi_datum_k;
    
    IF prvo_popravak = drugo_popravak THEN
		SET txt_po = CONCAT("Vremensko razdoblje od ", prvi_datum_p," do ", prvi_datum_k, " ima isti trošak kada je riječ o popravcima u usporedbi s razdobljem od ",  drugi_datum_p, " do ", drugi_datum_k);
	ELSEIF prvo_popravak > drugo_popravak THEN
		SET txt_po = CONCAT("Vremensko razdoblje od ", prvi_datum_p," do ", prvi_datum_k, " ima veći trošak kada je riječ o popravcima u usporedbi s razdobljem od ",  drugi_datum_p, " do ", drugi_datum_k);
	ELSE
		SET txt_po = CONCAT("Vremensko razdoblje od ", prvi_datum_p," do ", prvi_datum_k, " ima manji trošak kada je riječ o popravcima u usporedbi s razdobljem od ",  drugi_datum_p, " do ", drugi_datum_k);
	END IF;
    
    
    SELECT SUM(trosak_lijecenja) INTO prvo_lijecenje
    FROM lijecenje
    WHERE pocetak_lijecenja >= prvi_datum_p AND kraj_lijecenja <= prvi_datum_k;

    SELECT SUM(trosak_lijecenja) INTO drugo_lijecenje
    FROM lijecenje
    WHERE pocetak_lijecenja >= drugi_datum_p AND kraj_lijecenja <= drugi_datum_k;

	IF prvo_lijecenje = drugo_lijecenje THEN
		SET txt_li = CONCAT("Vremensko razdoblje od ", prvi_datum_p," do ", prvi_datum_k, " ima isti trošak kada je riječ o lijecenju u usporedbi s razdobljem od ",  drugi_datum_p, " do ", drugi_datum_k);
	ELSEIF prvo_lijecenje > drugo_lijecenje THEN
		SET txt_li = CONCAT("Vremensko razdoblje od ", prvi_datum_p," do ", prvi_datum_k, " ima veći trošak kada je riječ o lijecenju u usporedbi s razdobljem od ",  drugi_datum_p, " do ", drugi_datum_k);
	ELSE
		SET txt_li = CONCAT("Vremensko razdoblje od ", prvi_datum_p," do ", prvi_datum_k, " ima manji trošak kada je riječ o lijecenju u usporedbi s razdobljem od ",  drugi_datum_p, " do ", drugi_datum_k);
	END IF;

END //
DELIMITER ;

CALL usporedba(STR_TO_DATE("1.10.1991.  12:37:13", "%d.%m.%Y. %H:%i:%s"), STR_TO_DATE("1.10.2013.  12:37:13", "%d.%m.%Y. %H:%i:%s"), 
			   STR_TO_DATE("1.10.1995.  10:45:10", "%d.%m.%Y. %H:%i:%s"), STR_TO_DATE("1.10.2011.  19:37:16", "%d.%m.%Y. %H:%i:%s"),
@usp_mi, @usp_po, @usp_li);
SELECT  @usp_mi AS rez_usporedbe_misija, @usp_po AS rez_usporedbe_popravci, @usp_li AS rez_usporedbe_lijecenje FROM DUAL;
 
 
 
 
          /*
Ispisati koliki je broj osoblja, vozila, opreme trenutačno dostupno(3 vrijednosti) u danom intervalu (dva datuma
koje korisnik izabere kao ulazne argumente          																				*/

DROP PROCEDURE IF EXISTS br_dostupnog_os_vo_op;

DELIMITER //
CREATE PROCEDURE br_dostupnog_os_vo_op(IN datum_p DATETIME, IN datum_k DATETIME, OUT dost_os INT, OUT dost_vo INT, OUT dost_op INT)
DETERMINISTIC
BEGIN
   DECLARE oduzet_br_voz INTEGER;
   DECLARE oduzet_br_op INTEGER;
   
   SELECT COUNT(*) INTO dost_os
   FROM osoblje 
   WHERE id NOT IN
    (SELECT DISTINCT id_osoblje
    FROM osoblje_na_treningu
    INNER JOIN trening
    ON trening.id = osoblje_na_treningu.id_trening
    WHERE (datum_p > vrijeme_pocetka AND datum_p < vrijeme_kraja) OR (datum_k > vrijeme_pocetka AND datum_k < vrijeme_kraja)
    UNION
	SELECT DISTINCT id_osoblje
    FROM lijecenje
    WHERE (datum_p > pocetak_lijecenja AND datum_p < kraj_lijecenja) OR (datum_k > pocetak_lijecenja AND datum_k < kraj_lijecenja)
    UNION
    SELECT DISTINCT id_osoblje
    FROM osoblje_na_turi
    WHERE (datum_p > datum_pocetka AND datum_p < datum_kraja) OR (datum_k > datum_pocetka AND datum_k < datum_kraja));
    
    
    
   SELECT SUM(ukupna_kolicina) INTO dost_vo
   FROM vozila;
    
   SELECT SUM(br_voz_zauzet) INTO oduzet_br_voz
   FROM
   (SELECT COUNT(*) AS br_voz_zauzet
   FROM popravak 
   INNER JOIN vozilo_na_misiji
   ON popravak.id_vozilo_na_misiji = vozilo_na_misiji.id
   WHERE (datum_p > pocetak_popravka AND datum_p < kraj_popravka) OR (datum_k > pocetak_popravka AND datum_k < kraj_popravka)
   UNION ALL
   SELECT SUM(kolicina) AS br_voz_zauzet
   FROM misija
   INNER JOIN vozilo_na_misiji
   ON misija.id = vozilo_na_misiji.id
   WHERE (datum_p > vrijeme_pocetka AND datum_p < vrijeme_kraja) OR (datum_k > vrijeme_pocetka AND datum_k < vrijeme_kraja)) AS l;
   
   SET dost_vo = dost_vo - oduzet_br_voz;
    
    
    
    SELECT SUM(ukupna_kolicina) INTO dost_op
    FROM oprema;
    
    SELECT SUM(izdana_kolicina) INTO oduzet_br_op
    FROM izdana_oprema
    INNER JOIN osoblje_na_misiji
    ON osoblje_na_misiji.id = izdana_oprema.id_osoblje_na_misiji
    INNER JOIN 
    (SELECT id
    FROM misija
    WHERE (datum_p > vrijeme_pocetka AND datum_p < vrijeme_kraja) OR (datum_k > vrijeme_pocetka AND datum_k < vrijeme_kraja)) AS l
    ON l.id = osoblje_na_misiji.id_misija;
    
    SET dost_op = dost_op - oduzet_br_op;
END//
DELIMITER ;

CALL br_dostupnog_os_vo_op(STR_TO_DATE("1.10.1991.  12:37:13", "%d.%m.%Y. %H:%i:%s"), 
STR_TO_DATE("1.10.2013.  12:37:13", "%d.%m.%Y. %H:%i:%s"), @a, @b, @c);
SELECT  @a AS br_dostupnog_osoblja, @b AS br_dostupnih_vozila, @c AS br_dostupne_opreme FROM DUAL;
